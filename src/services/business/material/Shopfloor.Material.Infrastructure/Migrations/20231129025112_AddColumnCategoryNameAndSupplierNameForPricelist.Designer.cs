// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Shopfloor.Material.Infrastructure.Contexts;

#nullable disable

namespace Shopfloor.Material.Infrastructure.Migrations
{
    [DbContext(typeof(MaterialContext))]
    [Migration("20231129025112_AddColumnCategoryNameAndSupplierNameForPricelist")]
    partial class AddColumnCategoryNameAndSupplierNameForPricelist
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Shopfloor.Material.Domain.Entities.AutoIncrement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Index")
                        .HasColumnType("int");

                    b.Property<string>("IndexFormat")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("InputValue")
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Separate")
                        .HasColumnType("varchar(10)");

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.ToTable("AutoIncrement", (string)null);
                });

            modelBuilder.Entity("Shopfloor.Material.Domain.Entities.Buyer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountGroup")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AccountGroupName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Address2")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Address3")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ApproveName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApproveUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankAccountNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("BankAddress")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("BillAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuyerType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuyerTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactEmail")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ContactFirstName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ContactLastName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Country")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CountryName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CountryOfFinalDestination")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Currency")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CurrencyName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CustomHouse")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("DeliveryTerms")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FinalDestination")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupNameCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("IsBrand")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBuying")
                        .HasColumnType("bit");

                    b.Property<bool>("IsComposition")
                        .HasColumnType("bit");

                    b.Property<bool>("IsManufacture")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOther")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRetailer")
                        .HasColumnType("bit");

                    b.Property<bool>("IsServiceProvider")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTransporter")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWholesaler")
                        .HasColumnType("bit");

                    b.Property<string>("Market")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("PAN")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PaymentTerms")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("PortofDischarge")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReasonReject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestNo")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SegmentOther")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipmentTerms")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ShortName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("State")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<string>("SwiftCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TIN")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telephone")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("Tolearance")
                        .HasMaxLength(10)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("VATNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ZipCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Buyer", (string)null);
                });

            modelBuilder.Entity("Shopfloor.Material.Domain.Entities.BuyerProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BuyerId")
                        .HasColumnType("int");

                    b.Property<string>("CategoryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BuyerId");

                    b.ToTable("BuyerProductCategory", (string)null);
                });

            modelBuilder.Entity("Shopfloor.Material.Domain.Entities.DynamicColumn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CategoryCode")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Code")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisplayIndex")
                        .HasColumnType("int");

                    b.Property<int>("FieldType")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("IsContent")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRequired")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("DynamicColumn", (string)null);
                });

            modelBuilder.Entity("Shopfloor.Material.Domain.Entities.DynamicColumnContent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Content")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DynamicColumnId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("DynamicColumnId");

                    b.ToTable("DynamicColumnContent", (string)null);
                });

            modelBuilder.Entity("Shopfloor.Material.Domain.Entities.FabricComposition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ContentNameDesc")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int>("MaterialRequestId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Percentage")
                        .HasColumnType("decimal(28,8)");

                    b.HasKey("Id");

                    b.HasIndex("MaterialRequestId");

                    b.ToTable("FabricComposition", (string)null);
                });

            modelBuilder.Entity("Shopfloor.Material.Domain.Entities.MOQMSQRoudingOptionItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("From")
                        .HasColumnType("decimal(28,8)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int>("MaterialRequestId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Qty")
                        .HasColumnType("decimal(28,8)");

                    b.Property<decimal>("To")
                        .HasColumnType("decimal(28,8)");

                    b.Property<string>("Type")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("MaterialRequestId");

                    b.ToTable("MOQMSQRoudingOptionItem", (string)null);
                });

            modelBuilder.Entity("Shopfloor.Material.Domain.Entities.MaterialRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApproveName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid?>("ApproveUserId")
                        .HasMaxLength(200)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ArticleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArticleDesc")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ArticleName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ArticleNameChinese")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Brand")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("BuyerCode")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("BuyerDivisionSupplierCode")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("BuyerDivisionSupplierName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("BuyerName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("BuyerRef")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("BuyingCurrencyCode")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("BuyingCurrencyName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("BuyingPrice")
                        .HasColumnType("decimal(28,8)");

                    b.Property<string>("CatalogPath")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ColorGroupCode")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ColorGroupName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ColorTypeCode")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ColorTypeName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ConsUomCode")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ConsUomName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ConstructionCode")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ConstructionName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ContentName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CountCode")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("CountName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CropSeasonCode")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("CropSeasonName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DesignAndPattern")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("DesignAndPatternName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("DivisionCode")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("DivisionName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FabricAndMaterial")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("FiberTypeCode")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("FiberTypeName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Finish")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("GenderCode")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("GenderName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("GradeCode")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("GradeName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("HSNCode")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("HTSCode")
                        .HasColumnType("varchar(200)");

                    b.Property<decimal>("InternalPrice")
                        .HasColumnType("decimal(28,8)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("MaterialTypeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaterialTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MaximumQty")
                        .HasColumnType("decimal(28,8)");

                    b.Property<string>("MicronaireCode")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("MicronaireName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("MinimumOrder")
                        .HasColumnType("decimal(28,8)");

                    b.Property<decimal>("MinimumOrderQty")
                        .HasColumnType("decimal(28,8)");

                    b.Property<decimal>("MinimumQty")
                        .HasColumnType("decimal(28,8)");

                    b.Property<DateTime?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("OrderQtyMultiple")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("OriginCode")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OriginName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("OurContactCode")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OurContactName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PerSizeConsCode")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("PerSizeConsName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PicName")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("PricePerCode")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("PricePerName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ProductCatCode")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ProductCatName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ProductGroupCode")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ProductGroupName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ProductSubCatCode")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ProductSubCatName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ProvisionalStyleRef")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("QualityCode")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("QualityName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ReasonReject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ReorderLevel")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("RequestNo")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("RequirementMultiple")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("SampleRef")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("SeasonCode")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("SeasonName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SecondaryUomCode")
                        .HasColumnType("varchar(200)");

                    b.Property<decimal>("SecondaryUomConversion")
                        .HasColumnType("decimal(28,8)");

                    b.Property<string>("SecondaryUomName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SizeGroupCode")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("SizeGroupName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("StapleCode")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("StapleName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<decimal>("StockMovementConversion")
                        .HasColumnType("decimal(28,8)");

                    b.Property<string>("StockMovementUomCode")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("StockMovementUomName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("StoringUomCode")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("StoringUomName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("StrengthCode")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("StrengthName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SupplierCode")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("SupplierName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SupplierRef")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ThemeCode")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ThemeName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("UomCode")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("UomName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(28,8)");

                    b.HasKey("Id");

                    b.ToTable("MaterialRequest", (string)null);
                });

            modelBuilder.Entity("Shopfloor.Material.Domain.Entities.MaterialRequestDynamicColumn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DynamicColumnId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int>("MaterialRequestId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("DynamicColumnId");

                    b.HasIndex("MaterialRequestId");

                    b.ToTable("MaterialRequestDynamicColumn", (string)null);
                });

            modelBuilder.Entity("Shopfloor.Material.Domain.Entities.PriceList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApproveName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid?>("ApproveUserId")
                        .HasMaxLength(200)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CategoryCode")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("CategoryName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ReasonReject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestNo")
                        .HasColumnType("varchar(50)");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<string>("SupplierCode")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("SupplierName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("PriceList", (string)null);
                });

            modelBuilder.Entity("Shopfloor.Material.Domain.Entities.PriceListDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ArticleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArticleName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Currency")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DeliveryTerm")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("MaterialCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(28,8)");

                    b.Property<int>("PriceListId")
                        .HasColumnType("int");

                    b.Property<string>("Uom")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PriceListId");

                    b.ToTable("PriceListDetail", (string)null);
                });

            modelBuilder.Entity("Shopfloor.Material.Domain.Entities.PriceListDetailColor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("PriceListDetailId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PriceListDetailId");

                    b.ToTable("PriceListDetailColor", (string)null);
                });

            modelBuilder.Entity("Shopfloor.Material.Domain.Entities.PriceListDetailSize", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("PriceListDetailId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PriceListDetailId");

                    b.ToTable("PriceListDetailSize", (string)null);
                });

            modelBuilder.Entity("Shopfloor.Material.Domain.Entities.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountGroupCode")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("AccountGroupName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ApproveName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ApproveUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BankAccountNumber")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("BankAddressDetails")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("BillAddress")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("CatalogPath")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CompanyId")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("CompanyWebsite")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ContactFirstName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ContactLastName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("CountryCode")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CountryName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CountryOfOrigin")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CurrencyCode")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CurrencyName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CustomHouse")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("DeliveryTerms")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(250)");

                    b.Property<string>("GroupName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("GroupNameCode")
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("IsBrand")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBuying")
                        .HasColumnType("bit");

                    b.Property<bool>("IsComposition")
                        .HasColumnType("bit");

                    b.Property<bool>("IsManufacture")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOther")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRetailer")
                        .HasColumnType("bit");

                    b.Property<bool>("IsServiceProvider")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTransporter")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWholesaler")
                        .HasColumnType("bit");

                    b.Property<decimal>("MaximumOutAmount")
                        .HasColumnType("decimal(28,8)");

                    b.Property<DateTime?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Pan")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PaymentTerms")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PicName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("PortOfLoading")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ProductCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReasonReject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remakes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestNo")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SegmentOther")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipAddress")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ShipmentTerms")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ShortName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("State")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<string>("SupplierTypeCode")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("SupplierTypeName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("SwiftCode")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Telephone")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Tin")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Tolearancen")
                        .HasColumnType("decimal(28,8)");

                    b.Property<string>("VATNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Supplier", (string)null);
                });

            modelBuilder.Entity("Shopfloor.Material.Domain.Entities.SupplierProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SupplierId");

                    b.ToTable("SupplierProductCategory", (string)null);
                });

            modelBuilder.Entity("Shopfloor.Material.Domain.Entities.SupplierWisePurchaseOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int>("MaterialRequestId")
                        .HasColumnType("int");

                    b.Property<string>("Mcq")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("McqSurchargeCurrency")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("McqSurchargeValue")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Moq")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("MoqRoundingTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoqSurChargeValue")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("MoqSurchargeCurrency")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Size")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("SupplierId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MaterialRequestId");

                    b.ToTable("SupplierWisePurchaseOption", (string)null);
                });

            modelBuilder.Entity("Shopfloor.Material.Domain.Entities.BuyerProductCategory", b =>
                {
                    b.HasOne("Shopfloor.Material.Domain.Entities.Buyer", "Buyer")
                        .WithMany("ProductCategories")
                        .HasForeignKey("BuyerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Buyer");
                });

            modelBuilder.Entity("Shopfloor.Material.Domain.Entities.DynamicColumnContent", b =>
                {
                    b.HasOne("Shopfloor.Material.Domain.Entities.DynamicColumn", "DynamicColumn")
                        .WithMany("DynamicColumnContents")
                        .HasForeignKey("DynamicColumnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DynamicColumn");
                });

            modelBuilder.Entity("Shopfloor.Material.Domain.Entities.FabricComposition", b =>
                {
                    b.HasOne("Shopfloor.Material.Domain.Entities.MaterialRequest", "MaterialRequest")
                        .WithMany("FabricCompositions")
                        .HasForeignKey("MaterialRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MaterialRequest");
                });

            modelBuilder.Entity("Shopfloor.Material.Domain.Entities.MOQMSQRoudingOptionItem", b =>
                {
                    b.HasOne("Shopfloor.Material.Domain.Entities.MaterialRequest", "MaterialRequest")
                        .WithMany("MoqmsqRoudingOptionItems")
                        .HasForeignKey("MaterialRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MaterialRequest");
                });

            modelBuilder.Entity("Shopfloor.Material.Domain.Entities.MaterialRequestDynamicColumn", b =>
                {
                    b.HasOne("Shopfloor.Material.Domain.Entities.DynamicColumn", "DynamicColumn")
                        .WithMany("MaterialRequestDynamicColumns")
                        .HasForeignKey("DynamicColumnId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Shopfloor.Material.Domain.Entities.MaterialRequest", "MaterialRequest")
                        .WithMany("DynamicColumns")
                        .HasForeignKey("MaterialRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DynamicColumn");

                    b.Navigation("MaterialRequest");
                });

            modelBuilder.Entity("Shopfloor.Material.Domain.Entities.PriceListDetail", b =>
                {
                    b.HasOne("Shopfloor.Material.Domain.Entities.PriceList", "PriceList")
                        .WithMany("PriceListDetails")
                        .HasForeignKey("PriceListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PriceList");
                });

            modelBuilder.Entity("Shopfloor.Material.Domain.Entities.PriceListDetailColor", b =>
                {
                    b.HasOne("Shopfloor.Material.Domain.Entities.PriceListDetail", "PriceListDetail")
                        .WithMany("PriceListDetailColors")
                        .HasForeignKey("PriceListDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PriceListDetail");
                });

            modelBuilder.Entity("Shopfloor.Material.Domain.Entities.PriceListDetailSize", b =>
                {
                    b.HasOne("Shopfloor.Material.Domain.Entities.PriceListDetail", "PriceListDetail")
                        .WithMany("PriceListDetailSizes")
                        .HasForeignKey("PriceListDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PriceListDetail");
                });

            modelBuilder.Entity("Shopfloor.Material.Domain.Entities.SupplierProductCategory", b =>
                {
                    b.HasOne("Shopfloor.Material.Domain.Entities.Supplier", "Supplier")
                        .WithMany("SupplierProductCategories")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Shopfloor.Material.Domain.Entities.SupplierWisePurchaseOption", b =>
                {
                    b.HasOne("Shopfloor.Material.Domain.Entities.MaterialRequest", "MaterialRequest")
                        .WithMany("SupplierWisePurchaseOptions")
                        .HasForeignKey("MaterialRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MaterialRequest");
                });

            modelBuilder.Entity("Shopfloor.Material.Domain.Entities.Buyer", b =>
                {
                    b.Navigation("ProductCategories");
                });

            modelBuilder.Entity("Shopfloor.Material.Domain.Entities.DynamicColumn", b =>
                {
                    b.Navigation("DynamicColumnContents");

                    b.Navigation("MaterialRequestDynamicColumns");
                });

            modelBuilder.Entity("Shopfloor.Material.Domain.Entities.MaterialRequest", b =>
                {
                    b.Navigation("DynamicColumns");

                    b.Navigation("FabricCompositions");

                    b.Navigation("MoqmsqRoudingOptionItems");

                    b.Navigation("SupplierWisePurchaseOptions");
                });

            modelBuilder.Entity("Shopfloor.Material.Domain.Entities.PriceList", b =>
                {
                    b.Navigation("PriceListDetails");
                });

            modelBuilder.Entity("Shopfloor.Material.Domain.Entities.PriceListDetail", b =>
                {
                    b.Navigation("PriceListDetailColors");

                    b.Navigation("PriceListDetailSizes");
                });

            modelBuilder.Entity("Shopfloor.Material.Domain.Entities.Supplier", b =>
                {
                    b.Navigation("SupplierProductCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
